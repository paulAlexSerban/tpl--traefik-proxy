# name: CI Release Workflow
# on:
#   push:
#     branches: [main]

# jobs:
#   lint-nginx-config:
#     name: Config
#     uses: paulAlexSerban/tpl--traefik-proxy/.github/workflows/ci-dev-nginx-config.yml@develop

#   lint-nginx-frontend:
#     name: Frontend
#     uses: paulAlexSerban/tpl--traefik-proxy/.github/workflows/ci-dev-nginx-frontend.yml@develop

#   test-nginx-docker:
#     name: Test
#     uses: paulAlexSerban/tpl--traefik-proxy/.github/workflows/ci-dev-nginx-docker.yml@develop

#   release:
#     name: Release
#     runs-on: ubuntu-latest
#     needs:
#       - lint-nginx-config
#       - lint-nginx-frontend
#       - test-nginx-docker
#     steps:
#       # Checkout repository
#       - name: "‚òÅÔ∏è checkout repository"
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
      
#       # Cache node_modules to speed up things
#       - name: Cache node_modules
#         uses: actions/cache@v1
#         with:
#           path: ~/.npm
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: "üîß Setup NodeJS 14.19.1"
#         uses: actions/setup-node@v1
#         with:
#           node-version: 14.19.1
#       - name: "üîß Install npm@latest"
#         run: npm i -g npm@latest

#       - name: "üì¶  Install CI dependencies"
#         run: npm run install:ci

#       # Create and tag new release using semantic-release
#       - name: "üöÄ Create Release"
#         run: npx semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
